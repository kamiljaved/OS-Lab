{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Cambria;}{\f6\froman\fprq2\fcharset0 Calibri;}{\f7\fnil\fprq2\fcharset0 Noto Sans CJK SC Regular;}{\f8\fnil\fprq2\fcharset0 Lohit Devanagari;}{\f9\fnil\fprq0\fcharset128 Lohit Devanagari;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033 Normal;}
{\s15\sbasedon0\snext16\sb240\sa120\keepn\dbch\af7\dbch\af8\afs28\loch\f4\fs28 Heading;}
{\s16\sbasedon0\snext16\sl276\slmult1\sb0\sa140 Text Body;}
{\s17\sbasedon16\snext17\sl276\slmult1\sb0\sa140\dbch\af9 List;}
{\s18\sbasedon0\snext18\sb120\sa120\noline\i\dbch\af9\afs24\ai\fs24 Caption;}
{\s19\sbasedon0\snext19\noline\dbch\af9 Index;}
}{\*\generator LibreOffice/6.0.7.3$Linux_X86_64 LibreOffice_project/00m0$Build-3}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2019\mo4\dy26\hr15\min32}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\qc\sb0\sa200{\b\rtlch \ltrch\loch\fs40\lang9\loch\f5\hich\af5
Lab Manual 8}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\qc\sb0\sa200{\b\rtlch \ltrch\loch\fs40\lang9\loch\f5\hich\af5
xv6 Threads}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200\b0\rtlch \ltrch\loch\fs22\lang9\loch\f6\hich\af6

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
In this project, you'll be adding real kernel threads to xv6.  Specifically, you'll do three things. First, you'll define a new system call to create a kernel thread, called clone() , as well as one to wait for a thread called join() . Then, you'll use clone() to build a little thread library, with a thread_create() , lock_acquire() , lock_release() , and cv_signal() and cv_wait() functions.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\loch\fs32\lang9\loch\f5\hich\af5
Details}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\loch\fs32\lang9\loch\f5\hich\af5
Thread Library:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
1. Your new clone system call should look like this: }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
\tab \tab }{\b\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
int clone(void(*fcn)(void*), void *arg, void*stack) }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\fs24\lang9\loch\f5\hich\af5
 }{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
This call creates a new kernel thread which shares the calling process's address space. File descriptors are copied as in fork. The new process uses stack as its user stack, which is passed the given argument arg and uses a fake return PC (0xffffffff). The stack should be one page in size and page-aligned. The new thread starts executing at the address specified by fcn . As with fork(), the PID of the new thread is returned to the parent.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
2. Another new system call is:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
\tab }{\b\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
\tab \tab \tab int join(void **stack) }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\fs24\lang9\loch\f5\hich\af5
 }{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
This call waits for a child thread that shares the address space with the calling process. It returns the PID of waited-for child or -1 if none. The location of the child's user stack is copied into the argument stack .}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
3. Your thread library will be built on top of this, and just have a simple routine:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
\tab \tab }{\b\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
thread_create(void (*start_routine)(void*), void *arg)  }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\fs24\lang9\loch\f5\hich\af5
}{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
This routine should call malloc() to create a new user stack, use clone() to create the child thread and get it running. }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
4. A thread_join() call should also be used, which calls the underlying join() system call, frees the user stack, and then returns.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\loch\fs32\lang9\loch\f5\hich\af5
Spin Locks:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
Your thread library should also have a simple spin lock. There should be a type lock_t that one uses to declare a lock, and three routines:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
1. lock_t}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
2 lock_acquire(lock_t *)  to acquire lock}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
3 lock_release(lock_t *) to release lock}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
4 lock_init(lock_t *) to initialize lock }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\loch\fs32\lang9\loch\f5\hich\af5
Condition Variables:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
Finally, you should have a simple condition variable and related routines: }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
1. cond_t}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
2. cv_wait(cond_t *, lock_t *) }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
3. cv_signal(cond_t *) }
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
These routines should do what is expected: either put the caller to sleep (and release the lock) or wake a sleeping thread, respectively.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b\rtlch \ltrch\loch\fs32\lang9\loch\f5\hich\af5
Other System Calls:}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
You also need to think about the semantics of a couple of existing system calls. For example, int wait() should wait for a child process that does not share the address space with this process. It should also free the address space if this is last reference to it. Finally, exit() should work as before but for both processes and threads; little change is required here.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200{\b0\rtlch \ltrch\loch\fs24\lang9\loch\f5\hich\af5
One thing you need to be careful with is when an address space is grown by a thread in a multi-threaded process. Trace this code path carefully and see where a new lock is needed and what else needs to be updated to grow an address space in a multi-threaded process correctly.}
\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200\rtlch \ltrch\loch

\par \pard\plain \s0\nowidctlpar\hyphpar0\cf0\kerning1\dbch\af7\langfe2052\dbch\af8\afs24\alang1081\loch\f3\hich\af3\fs24\lang1033\sl276\slmult1\sb0\sa200\rtlch \ltrch\loch

\par }