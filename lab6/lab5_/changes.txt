<xv6/user/null.c>, <xv6/user/nullref.c>
add a null-referencing program to xv6 user-progs


<xv6/user/makefile.mk>
USER_LDFLAGS += --section-start=.text=0x0
# to
USER_LDFLAGS += --section-start=.text=0x1000
# to change the starting VA value from 0 to PGSIZE in compiled program code

<xv6/kernel/exec.c> -- exec()
// change starting point "sz" used by allocuvm(), loaduvm() to PGSIZE 
// exec() ->
//      calls setupkvm()
//      calls allocuvm() and loaduvm() for each segment of ELF

<xv6/kernel/vm.c>
// has setupkvm()
// has allocuvm()
// has loaduvm()
// has copyuvm()

<xv6/kernel/vm.c> -- issue related to proc.c/fork()
// may want to change copyuvm() in vm.c to start copying address space from first page instead of VA 0
// copyuvm() requires page to be mapped
// this change may only be required for the initial (kernel and) user process (as they are using fork/copyuvm), 
// hence can be avoided if only their pages are mapped starting from VA 0
// TO AVOID ISSUE "copyuvm: page not present" without changing copyuvm(), skip 'sz' change in exec() for intial processes (pid <= 1)
// but fork() will not work (check forktest.c) without fixing copyuvm()

<xv6/kernel/trap.c>
// may add extra messages for errno. caused on null pointer dereferencing

<xv6/kernel/mmu.h>
// has PGSIZE (4096)
***** other notes

fork() in proc.c calls copyuvm() (vm.c) to create copy of parent's vm for child

syscall sbrk -> growproc(n) in proc.c used by processes to shrink/grow memory